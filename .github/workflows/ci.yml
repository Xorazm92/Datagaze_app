name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: datagaze
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Create .env file
      run: |
        echo "DATABASE_HOST=localhost" >> .env
        echo "DATABASE_PORT=5432" >> .env
        echo "DATABASE_USER=postgres" >> .env
        echo "DATABASE_PASSWORD=postgres" >> .env
        echo "DATABASE_NAME=datagaze" >> .env
        echo "JWT_SECRET=test-secret" >> .env

    - name: Run migrations
      run: npm run migration:run

    - name: Run tests
      run: npm test

    - name: Run linting
      run: npm run lint

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
    - name: Deploy to production
      run: |
        echo "Add your deployment steps here"
        # Example:
        # - SSH into your server
        # - Pull latest changes
        # - Install dependencies
        # - Run migrations
        # - Restart application
